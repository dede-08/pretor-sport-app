2025-10-15 20:12:22 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - Starting PretorSportBackendApplication using Java 17.0.12 with PID 8888 (C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app\com.pretor-sport.app\target\classes started by Ben in C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app)
2025-10-15 20:12:22 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-15 20:12:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-15 20:12:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-15 20:12:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-15 20:12:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 7 JPA repository interfaces.
2025-10-15 20:12:24 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-15 20:12:24 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-15 20:12:24 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-10-15 20:12:24 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-15 20:12:24 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2127 ms
2025-10-15 20:12:24 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-15 20:12:25 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-10-15 20:12:25 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-15 20:12:25 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-15 20:12:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-15 20:12:25 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@184499cc
2025-10-15 20:12:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-15 20:12:25 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-15 20:12:25 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-15 20:12:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-15 20:12:28 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-15 20:12:28 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-15 20:12:30 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-15 20:12:30 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-15 20:12:32 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-15 20:12:32 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
2025-10-15 20:12:32 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /images/**] in 'resourceHandlerMapping'
2025-10-15 20:12:33 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-15 20:12:33 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-10-15 20:12:33 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-10-15 20:12:33 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-15 20:12:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-15 20:12:33 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - Started PretorSportBackendApplication in 11.974 seconds (process running for 12.996)
2025-10-15 20:12:41 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-15 20:12:41 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@e7f77ed
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6d631666
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-10-15 20:12:41 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:12:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?tamanoPagina=12&pagina=0
2025-10-15 20:12:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:12:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:12:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:12:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?tamanoPagina=12&pagina=0
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:12:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:12:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0", parameters={masked}
2025-10-15 20:12:41 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?tamanoPagina=12&pagina=0", parameters={masked}
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0", parameters={masked}
2025-10-15 20:12:41 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:12:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:12:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre desc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre desc 
        fetch
            first ? rows only
2025-10-15 20:12:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:12:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre desc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre desc 
        fetch
            first ? rows only
2025-10-15 20:12:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:12:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:12:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:12:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:12:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:12:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:12:42 [http-nio-8080-exec-1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-10-15 20:12:42 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:12:42 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:12:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:12:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:12:42 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:12:42 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:12:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:12:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:12:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:12:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:12:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:12:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:12:42 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:12:42 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:12:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:12:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.AuthController#login(LoginRequestDTO)
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDTO(email=admin@pretor.com, password=pretorsportadmin100q, rememberMe=false)]
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2025-10-15 20:12:55 [http-nio-8080-exec-8] DEBUG o.s.s.authentication.ProviderManager - Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-10-15 20:12:55 [http-nio-8080-exec-8] WARN  c.p.app.service.AuthService - Intento de login fallido para email: admin@pretor.com
2025-10-15 20:12:55 [http-nio-8080-exec-8] ERROR c.p.app.controller.AuthController - Error en login: Credenciales inválidas
2025-10-15 20:12:56 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:12:56 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{error=Error de autenticación, message=Credenciales inválidas}]
2025-10-15 20:12:56 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.AuthController#login(LoginRequestDTO)
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDTO(email=admin@pretor.com, password=pretorsportadmin100@, rememberMe=false)]
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* UPDATE
        Usuario u 
    SET
        u.ultimoAcceso = :fechaAcceso 
    WHERE
        u.email = :email */ update usuarios u1_0 
    set
        ultimo_acceso=? 
    where
        u1_0.email=?
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:13:02 [http-nio-8080-exec-9] INFO  c.p.app.service.AuthService - Usuario autenticado exitosamente: admin@pretor.com con rol: ROLE_ADMIN
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponseDTO(accessToken=eyJhbGciOiJIUzUxMiJ9.eyJ0eXBlIjoiQUNDRVNTIiwidXNlcklkIjoxLCJyb2wiOiJST0x (truncated)...]
2025-10-15 20:13:02 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:13:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /productos
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:13:02 [http-nio-8080-exec-3] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:13:02 [http-nio-8080-exec-3] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:13:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:14:47 [http-nio-8080-exec-2] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:47 [http-nio-8080-exec-2] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:14:47 [http-nio-8080-exec-4] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:47 [http-nio-8080-exec-4] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:47 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /productos?tamanoPagina=12&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-8] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:50 [http-nio-8080-exec-8] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0", parameters={masked}
2025-10-15 20:14:50 [http-nio-8080-exec-9] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:50 [http-nio-8080-exec-9] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0", parameters={masked}
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?tamanoPagina=12&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-6] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:50 [http-nio-8080-exec-6] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?tamanoPagina=12&pagina=0
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?tamanoPagina=12&pagina=0", parameters={masked}
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre desc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre desc 
        fetch
            first ? rows only
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre desc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre desc 
        fetch
            first ? rows only
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:50 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:50 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:14:54 [http-nio-8080-exec-10] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:54 [http-nio-8080-exec-10] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:54 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:14:54 [http-nio-8080-exec-3] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:54 [http-nio-8080-exec-3] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:54 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?tamanoPagina=12&pagina=0
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?tamanoPagina=12&pagina=0
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?tamanoPagina=12&pagina=0", parameters={masked}
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?ordenarPor=popularidad&direccion=desc&tamanoPagina=8&pagina=0", parameters={masked}
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos?ordenarPor=descuento&direccion=desc&tamanoPagina=8&pagina=0", parameters={masked}
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre desc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre desc 
        fetch
            first ? rows only
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre desc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre desc 
        fetch
            first ? rows only
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:14:57 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:15:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:15:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:15:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-15 20:15:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:15:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-15 20:15:37 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-10-15 20:15:37 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.AuthController#login(LoginRequestDTO)
2025-10-15 20:15:37 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDTO(email=admin@pretor.com, password=pretosportadmin100@, rememberMe=false)]
2025-10-15 20:15:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:15:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2025-10-15 20:15:38 [http-nio-8080-exec-10] DEBUG o.s.s.authentication.ProviderManager - Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-10-15 20:15:38 [http-nio-8080-exec-10] WARN  c.p.app.service.AuthService - Intento de login fallido para email: admin@pretor.com
2025-10-15 20:15:38 [http-nio-8080-exec-10] ERROR c.p.app.controller.AuthController - Error en login: Credenciales inválidas
2025-10-15 20:15:38 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:15:38 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{error=Error de autenticación, message=Credenciales inválidas}]
2025-10-15 20:15:38 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.AuthController#login(LoginRequestDTO)
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDTO(email=admin@pretor.com, password=preetorsportadmin100q, rememberMe=false)]
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.s.authentication.ProviderManager - Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-10-15 20:15:44 [http-nio-8080-exec-3] WARN  c.p.app.service.AuthService - Intento de login fallido para email: admin@pretor.com
2025-10-15 20:15:44 [http-nio-8080-exec-3] ERROR c.p.app.controller.AuthController - Error en login: Credenciales inválidas
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{error=Error de autenticación, message=Credenciales inválidas}]
2025-10-15 20:15:44 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-10-15 20:15:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-15 20:15:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:15:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-15 20:15:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-10-15 20:15:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.AuthController#login(LoginRequestDTO)
2025-10-15 20:15:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDTO(email=admin@pretor.com, password=pretorsportadmin100q, rememberMe=false)]
2025-10-15 20:15:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:15:51 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2025-10-15 20:15:51 [http-nio-8080-exec-1] DEBUG o.s.s.authentication.ProviderManager - Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-10-15 20:15:51 [http-nio-8080-exec-1] WARN  c.p.app.service.AuthService - Intento de login fallido para email: admin@pretor.com
2025-10-15 20:15:51 [http-nio-8080-exec-1] ERROR c.p.app.controller.AuthController - Error en login: Credenciales inválidas
2025-10-15 20:15:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:15:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{error=Error de autenticación, message=Credenciales inválidas}]
2025-10-15 20:15:51 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.AuthController#login(LoginRequestDTO)
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDTO(email=admin@pretor.com, password=pretorsportadmin100@, rememberMe=false)]
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* UPDATE
        Usuario u 
    SET
        u.ultimoAcceso = :fechaAcceso 
    WHERE
        u.email = :email */ update usuarios u1_0 
    set
        ultimo_acceso=? 
    where
        u1_0.email=?
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:16:00 [http-nio-8080-exec-4] INFO  c.p.app.service.AuthService - Usuario autenticado exitosamente: admin@pretor.com con rol: ROLE_ADMIN
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponseDTO(accessToken=eyJhbGciOiJIUzUxMiJ9.eyJ0eXBlIjoiQUNDRVNTIiwidXNlcklkIjoxLCJyb2wiOiJST0x (truncated)...]
2025-10-15 20:16:00 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:16:01 [http-nio-8080-exec-2] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:16:01 [http-nio-8080-exec-2] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:16:01 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:17:22 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-15 20:17:23 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-15 20:17:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-15 20:17:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-15 20:17:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-15 20:20:32 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - Starting PretorSportBackendApplication using Java 17.0.12 with PID 17356 (C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app\com.pretor-sport.app\target\classes started by Ben in C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app)
2025-10-15 20:20:32 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-15 20:20:32 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-15 20:20:32 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-15 20:20:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-15 20:20:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 7 JPA repository interfaces.
2025-10-15 20:20:34 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-15 20:20:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-15 20:20:34 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-10-15 20:20:34 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-15 20:20:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1602 ms
2025-10-15 20:20:34 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-15 20:20:34 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-10-15 20:20:34 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-15 20:20:34 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-15 20:20:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-15 20:20:34 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ac940ec
2025-10-15 20:20:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-15 20:20:34 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-15 20:20:34 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-15 20:20:35 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-15 20:20:36 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-15 20:20:36 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-15 20:20:38 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-15 20:20:38 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-15 20:20:38 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-15 20:20:38 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
2025-10-15 20:20:38 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /images/**] in 'resourceHandlerMapping'
2025-10-15 20:20:39 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-15 20:20:39 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-10-15 20:20:39 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-10-15 20:20:39 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-15 20:20:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-15 20:20:39 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - Started PretorSportBackendApplication in 7.356 seconds (process running for 7.983)
2025-10-15 20:21:48 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-15 20:21:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@68fcb1b
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@68c5e808
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-10-15 20:21:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/health
2025-10-15 20:21:48 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:21:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing HEAD /images/pelota mikasa white.webp
2025-10-15 20:21:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:22:43 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-10-15 20:22:43 [Thread-5] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-15 20:22:44 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-15 20:22:44 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-15 20:22:44 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-15 20:22:44 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-15 20:22:44 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - Starting PretorSportBackendApplication using Java 17.0.12 with PID 17356 (C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app\com.pretor-sport.app\target\classes started by Ben in C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app)
2025-10-15 20:22:44 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-15 20:22:45 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-15 20:22:45 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 108 ms. Found 7 JPA repository interfaces.
2025-10-15 20:22:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-15 20:22:45 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-15 20:22:45 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-10-15 20:22:45 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-15 20:22:45 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1095 ms
2025-10-15 20:22:45 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-15 20:22:45 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-15 20:22:45 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-15 20:22:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-10-15 20:22:45 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@661e0045
2025-10-15 20:22:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-10-15 20:22:45 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-15 20:22:45 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 17.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-15 20:22:46 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-15 20:22:46 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-15 20:22:46 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-15 20:22:46 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-15 20:22:47 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-15 20:22:47 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
2025-10-15 20:22:47 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /images/**] in 'resourceHandlerMapping'
2025-10-15 20:22:47 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-15 20:22:47 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-10-15 20:22:47 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-10-15 20:29:23 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - Starting PretorSportBackendApplication using Java 17.0.12 with PID 27152 (C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app\com.pretor-sport.app\target\classes started by Ben in C:\Users\Ben\OneDrive\Desktop\pretor-sport-app\com.pretor-sport.app)
2025-10-15 20:29:23 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-15 20:29:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-15 20:29:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-15 20:29:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-15 20:29:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 7 JPA repository interfaces.
2025-10-15 20:29:24 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-15 20:29:24 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-15 20:29:24 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-10-15 20:29:25 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-15 20:29:25 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1782 ms
2025-10-15 20:29:25 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-15 20:29:25 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-10-15 20:29:25 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-15 20:29:25 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-15 20:29:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-15 20:29:26 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2dbd16d2
2025-10-15 20:29:26 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-15 20:29:26 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-15 20:29:26 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-15 20:29:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-15 20:29:27 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-15 20:29:27 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-15 20:29:29 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-15 20:29:29 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-15 20:29:30 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-15 20:29:30 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
2025-10-15 20:29:30 [restartedMain] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /images/**] in 'resourceHandlerMapping'
2025-10-15 20:29:30 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-15 20:29:30 [restartedMain] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-10-15 20:29:30 [restartedMain] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-10-15 20:29:30 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-15 20:29:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-15 20:29:30 [restartedMain] INFO  c.p.a.PretorSportBackendApplication - Started PretorSportBackendApplication in 8.052 seconds (process running for 8.744)
2025-10-15 20:29:33 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-15 20:29:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@57326859
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@427f7846
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-10-15 20:29:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.AuthController#login(LoginRequestDTO)
2025-10-15 20:29:33 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDTO(email=admin@pretor.com, password=pretorsportadmin100@, rememberMe=false)]
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* UPDATE
        Usuario u 
    SET
        u.ultimoAcceso = :fechaAcceso 
    WHERE
        u.email = :email */ update usuarios u1_0 
    set
        ultimo_acceso=? 
    where
        u1_0.email=?
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.direccion,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_actualizacion,
        u1_0.fecha_registro,
        u1_0.nombre,
        u1_0.password,
        u1_0.rol,
        u1_0.telefono,
        u1_0.token_verificacion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.activo=?
2025-10-15 20:29:34 [http-nio-8080-exec-1] INFO  c.p.app.service.AuthService - Usuario autenticado exitosamente: admin@pretor.com con rol: ROLE_ADMIN
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponseDTO(accessToken=eyJhbGciOiJIUzUxMiJ9.eyJ0eXBlIjoiQUNDRVNTIiwidXNlcklkIjoxLCJyb2wiOiJST0x (truncated)...]
2025-10-15 20:29:34 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:29:34 [http-nio-8080-exec-2] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:29:34 [http-nio-8080-exec-2] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:29:34 [http-nio-8080-exec-2] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:29:34 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:29:38 [http-nio-8080-exec-6] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:29:38 [http-nio-8080-exec-6] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /productos
2025-10-15 20:29:38 [http-nio-8080-exec-6] ERROR c.pretor_sport.app.security.JwtUtil - Error al parsear JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:29:38 [http-nio-8080-exec-6] ERROR c.p.a.s.JwtAuthenticationFilter - Error en la autenticación JWT: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /productos
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/productos", parameters={}
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.pretor_sport.app.controller.ProductoController#listarProductos(String, List, String, String, String, List, List, String, List, Boolean, String, String, String, String, Integer, Integer)
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Producto p 
    WHERE
        (
            :busqueda IS NULL 
            OR p.nombre LIKE :busqueda_1 
            OR p.descripcion LIKE :busqueda_1
        ) 
        AND (
            :categoriaIds IS NULL 
            OR p.categoria.id IN :categoriaIds_1
        ) 
        AND (
            :marca IS NULL 
            OR p.marca LIKE :marca_1
        ) 
        AND (
            :precioMin IS NULL 
            OR p.precio >= :precioMin
        ) 
        AND (
            :precioMax IS NULL 
            OR p.precio <= :precioMax
        ) 
        AND (
            :tallas IS NULL 
            OR p.talla IN :tallas_1
        ) 
        AND (
            :colores IS NULL 
            OR p.color IN :colores_1
        ) 
        AND (
            :genero IS NULL 
            OR p.genero = :genero
        ) 
        AND (
            :materiales IS NULL 
            OR p.material IN :materiales_1
        ) 
        AND (
            :soloDisponibles = false 
            OR (
                p.activo = true 
                AND p.stock > 0
            )
        ) 
        AND (
            :pesoMin IS NULL 
            OR p.peso >= :pesoMin
        ) 
        AND (
            :pesoMax IS NULL 
            OR p.peso <= :pesoMax
        ) 
    order by
        p.nombre asc */ select
            p1_0.id,
            p1_0.activo,
            p1_0.categoria_id,
            p1_0.color,
            p1_0.descripcion,
            p1_0.fecha_actualizacion,
            p1_0.fecha_creacion,
            p1_0.genero,
            p1_0.imagen_url,
            p1_0.marca,
            p1_0.material,
            p1_0.modelo,
            p1_0.nombre,
            p1_0.peso,
            p1_0.precio,
            p1_0.proveedor_id,
            p1_0.stock,
            p1_0.talla 
        from
            productos p1_0 
        where
            (
                ? is null 
                or p1_0.nombre like ? escape '' 
                or p1_0.descripcion like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.categoria_id in (?)
            ) 
            and (
                ? is null 
                or p1_0.marca like ? escape ''
            ) 
            and (
                ? is null 
                or p1_0.precio>=?
            ) 
            and (
                ? is null 
                or p1_0.precio<=?
            ) 
            and (
                ? is null 
                or p1_0.talla in (?)
            ) 
            and (
                ? is null 
                or p1_0.color in (?)
            ) 
            and (
                ? is null 
                or p1_0.genero=?
            ) 
            and (
                ? is null 
                or p1_0.material in (?)
            ) 
            and (
                ?=false 
                or (
                    p1_0.activo=true 
                    and p1_0.stock>0
                )
            ) 
            and (
                ? is null 
                or p1_0.peso>=?
            ) 
            and (
                ? is null 
                or p1_0.peso<=?
            ) 
        order by
            p1_0.nombre 
        fetch
            first ? rows only
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.activa,
        c1_0.descripcion,
        c1_0.fecha_actualizacion,
        c1_0.fecha_creacion,
        c1_0.icono_url,
        c1_0.nombre,
        c1_0.orden,
        c1_0.tipo 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.direccion,
        p1_0.email,
        p1_0.nombre,
        p1_0.ruc,
        p1_0.telefono 
    from
        proveedores p1_0 
    where
        p1_0.id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.pretor_sport.app.dto.response.ProductoResponseDTO instances]
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.producto_id,
        c1_0.caracteristica 
    from
        producto_caracteristicas c1_0 
    where
        c1_0.producto_id=?
2025-10-15 20:29:38 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-10-15 20:29:48 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-15 20:29:49 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-15 20:29:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-15 20:29:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-15 20:29:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
